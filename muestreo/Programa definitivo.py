# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\prueba02.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

# user imports BEGIN
import serial
from serial import Serial
import threading

import os
# user imports END


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(615, 591)
        self.lcdNumber = QtWidgets.QLCDNumber(Dialog)
        self.lcdNumber.setGeometry(QtCore.QRect(150, 70, 301, 151))
        self.lcdNumber.setSmallDecimalPoint(False)
        self.lcdNumber.setDigitCount(6)
        self.lcdNumber.setProperty("intValue", 8)
        self.lcdNumber.setObjectName("lcdNumber")
        self.pushButtonStart = QtWidgets.QPushButton(Dialog)
        self.pushButtonStart.setGeometry(QtCore.QRect(146, 250, 111, 51))
        self.pushButtonStart.setObjectName("pushButtonStart")
        self.pushButtonStop = QtWidgets.QPushButton(Dialog)
        self.pushButtonStop.setGeometry(QtCore.QRect(330, 250, 111, 51))
        self.pushButtonStop.setObjectName("pushButtonStop")
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        # User class code BEGIN


        self.pushButtonStop.setEnabled(False)   # se desactivan el botón stop
        # se establecen las funciones a ejecutar cuando click en botón
        self.pushButtonStart.clicked.connect(self.startCapture)
        self.pushButtonStop.clicked.connect(self.stopCapture)
        
        self.capturing=False

        # User class code STOP

    # User functions class BEGIN



    def startCapture(self):
            self.pushButtonStop.setEnabled(True)
            self.pushButtonStart.setEnabled(False)
            self.capturing=True



    def stopCapture(self):
        self.pushButtonStop.setEnabled(False)
        self.pushButtonStart.setEnabled(True)
        self.capturing=False

    # User functions class END



    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButtonStart.setText(_translate("Dialog", "Start"))
        self.pushButtonStop.setText(_translate("Dialog", "Stop"))

    


# User functions BEGIN

COM="COM19"
nombreArchivo='acelzmovladoalado06.txt'


script_dir = os.path.dirname(__file__) #<-- absolute dir the script is in
rel_path = "muestras/"+nombreArchivo
nombreArchivo = os.path.join(script_dir, rel_path)

def escribirArchivo(nombre,dato):
    with open(nombre,'a') as f:
        f.write(dato)
        f.write("\n")


def getValues(value):
    # print("empezar hilo")
    while isRun:
        
        cad = stm.readline().decode('ascii').strip()
        if cad:
            value=cad
            ui.lcdNumber.setProperty("value", str(value))
            # print(value)
                
            if ui.capturing:
                escribirArchivo(nombreArchivo,str(value))


            # pos=cad.index(":")
            # label = cad[:pos]
            # value=cad[pos+1:]
            # if label == 'adc':
            #     value=(int(value) *3.3)/4095
            #     ui.lcdNumber.setProperty("value", str(value))
            #     print(value)
                
            #     if ui.capturing:
            #         escribirArchivo(nombreArchivo,str(value))



# User functions END

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()

    # User code begin

    # escribirArchivo(nombreArchivo,"Holaa\n")
    
    
    hilo1 = threading.Thread(name="lecturaAdc",target=getValues,daemon=True, args=(1,))
    stm = serial.Serial(COM,115200)

    isRun=True
    hilo1.start()

    # User code end
    
    sys.exit(app.exec_())
